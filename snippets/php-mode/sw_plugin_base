# -*- mode: snippet -*-
# name: shopware plugin base class
# key: sw_plugin_base
# group: shopware
# contributor: Daniel Richtmann <daniel.richtmann@gmail.com>
# --
<?php

namespace $1;

use Shopware\Components\Plugin;
use Shopware\Components\Plugin\Context\InstallContext;
use Shopware\Components\Plugin\Context\UninstallContext;
use Shopware\Components\Plugin\Context\ActivateContext;
use Shopware\Components\Plugin\Context\DeactivateContext;
use Shopware\Components\Plugin\Context\UpdateContext;

use $1\Bootstrap\SchemaManager;

final class ${1:`(projectile-project-name)`} extends Plugin
{
    const CACHE_LIST = InstallContext::CACHE_LIST_ALL;

    public function install(InstallContext $context)
    {
        $this->getSchemaManager()->update();

        $this->createAttributes();

        $context->scheduleClearCache(self::CACHE_LIST);
    }

    public function uninstall(UninstallContext $context)
    {
        $context->scheduleClearCache(self::CACHE_LIST);

        if ($context->keepUserData()) {
            return;
        }

        $this->removeAttributes();

        $this->getSchemaManager()->uninstall();
    }

    public function activate(ActivateContext $context)
    {
        $context->scheduleClearCache(self::CACHE_LIST);
    }

    public function deactivate(DeactivateContext $context)
    {
        $context->scheduleClearCache(self::CACHE_LIST);
    }

    public function update(UpdateContext $context)
    {
        $this->getSchemaManager()->update();

        $this->createAttributes();

        $context->scheduleClearCache(self::CACHE_LIST);
    }

    private function createAttributes()
    {
        /** @var \Shopware\Bundle\AttributeBundle\Service\CrudService */
        $service = $this->container->get('shopware_attribute.crud_service');

        $service->update('${2:table_name}', '${3:column_name}', '${4:column_type}');

        $this->generateAttributeModels();
    }

    private function removeAttributes()
    {
        /** @var \Shopware\Bundle\AttributeBundle\Service\CrudService */
        $service = $this->container->get('shopware_attribute.crud_service');

        $service->delete('$2', '$3');

        $this->generateAttributeModels();
    }

    private function generateAttributeModels()
    {
        $this->container->get('models')->generateAttributeModels([
            '$2',
        ]);
    }

    /**
     * @return SchemaManager
     */
    private function getSchemaManager()
    {
        return new SchemaManager(
            $this->container->get('dbal_connection'),
            $this->getName()
        );
    }
}
